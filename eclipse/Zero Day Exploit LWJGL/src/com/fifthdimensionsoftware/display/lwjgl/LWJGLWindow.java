package com.fifthdimensionsoftware.display.lwjgl;

import java.util.Collection;
import java.util.LinkedHashMap;

import org.lwjgl.opengl.Display;
import org.newdawn.slick.BasicGame;
import org.newdawn.slick.Color;
import org.newdawn.slick.AppGameContainer;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Image;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.geom.Rectangle;

import com.fifthdimensionsoftware.display.ResourceUtil;
import com.fifthdimensionsoftware.game.ZeroDayExploit;
import com.fifthdimensionsoftware.tools.LWJGLUtil;
import com.fifthdimensionsoftware.tools.ScreenUtil;

public class LWJGLWindow extends BasicGame
{
	private LinkedHashMap<String, RenderAction> renderQueue = new LinkedHashMap<String, RenderAction>();
	private boolean finishedFadeIn = false;
	
	public LWJGLWindow()
	{
		super("Zero Day Exploit");
	}

	@Override
	public void render(GameContainer container, Graphics g) throws SlickException 
	{
		for(RenderAction action : this.getQueue())
		{
			action.execute();
		}
	}

	@Override
	public void init(GameContainer container) throws SlickException 
	{
		((AppGameContainer)container).setDisplayMode(ScreenUtil.getScreenBounds(ZeroDayExploit.getInstance().rootID).width, ScreenUtil.getScreenBounds(ZeroDayExploit.getInstance().rootID).height, false);
		Display.setLocation(ScreenUtil.getScreenBounds(ZeroDayExploit.getInstance().rootID).x, ScreenUtil.getScreenBounds(ZeroDayExploit.getInstance().rootID).y);
		container.setShowFPS(true);
		container.setClearEachFrame(false);
		ResourceUtil.loadResourceFromRes("Zero_Logo.png", false);
		ResourceUtil.loadResourceFromRes("5th_Logo.png", false);
		Image logo = ResourceUtil.getResource("5th_Logo.png").asImage;
		this.addActionToQueue("PatternBase", new RenderAction("drawImage", new Rectangle(0, 0, container.getWidth(), container.getHeight()), LWJGLUtil.preRenderPattern(new Rectangle(0, 0, container.getWidth(), container.getHeight()), LWJGLUtil.getImageFromRes("Pattern_Cube"))));
		this.addActionToQueue("BorderBase", new RenderAction("drawBorderFade", container.getGraphics(), new Rectangle(0, 0, container.getWidth(), container.getHeight()), Color.black, 25));
		this.addActionToQueue("ZeroLogo", new RenderAction("doNextFadeTick", new Rectangle(container.getWidth() / 2 - logo.getWidth() / 2, container.getHeight() / 2 - logo.getHeight() / 2, logo.getWidth(), logo.getHeight()), logo, "ZeroLogo"));
	}

	@Override
	public void update(GameContainer container, int time) throws SlickException 
	{
		//Disable the JDialog on the first frame
		if(ZeroDayExploit.getInstance().tmpDialog != null)
		{
			ZeroDayExploit.getInstance().tmpDialog.setVisible(false);
			ZeroDayExploit.getInstance().tmpDialog = null;
			System.gc();
		}
		
		//Fade the second icon in
		if(!this.renderQueue.containsKey("ZeroLogo") && !this.finishedFadeIn)
		{
			Image logo = ResourceUtil.getResource("Zero_Logo.png").asImage; 
			this.addActionToQueue("FifthLogo", new RenderAction("doNextFadeTick", new Rectangle(container.getWidth() / 2 - logo.getWidth() / 2, container.getHeight() / 2 - logo.getHeight() / 2, logo.getWidth(), logo.getHeight()), logo, "FifthLogo"));
			this.finishedFadeIn = true;
		}
	}
	
	public void addActionToQueue(String UID, RenderAction action)
	{
		if(!this.renderQueue.containsKey(UID))
			this.renderQueue.put(UID, action);
	}
	
	public Collection<RenderAction> getQueue()
	{
		return this.renderQueue.values();
	}
	
	public void removeActionFromQueue(String UID)
	{
		this.renderQueue.remove(UID);
	}
	
}
