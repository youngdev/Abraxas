package com.fifthdimensionsoftware.display.lwjgl.windows;

import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Set;

import org.newdawn.slick.Color;
import org.newdawn.slick.geom.Rectangle;
import org.newdawn.slick.gui.TextField;

import com.fifthdimensionsoftware.display.lwjgl.RenderAction;
import com.fifthdimensionsoftware.game.ZeroDayExploit;

public class Window {
	
	private Rectangle geom = new Rectangle(0, 0, 0, 0), handle = new Rectangle(0, 0, 0, 0);
	private String name = "";
	private LinkedHashMap<String, RenderAction> renderQueue = new LinkedHashMap<String, RenderAction>();
	private HashMap<String, Rectangle> buttonSpots = new HashMap<String, Rectangle>();
	private Color titleColor = new Color(115, 38, 38), borderOne = new Color(93, 6, 6), borderTwo = new Color(149, 92, 92), textColor = Color.white;
	public RenderAction renderFinal;
	
	public Window(String nameParam, Rectangle geomParam) 
	{
		this.geom = geomParam;
		this.name = nameParam;
		renderFinal = new WindowRenderAction("drawWindowDecor", ZeroDayExploit.getContainer().getGraphics(), this.name);
	}
	
	public void addActionToQueue(String UID, String methodName, Object...args)
	{
		if(!this.renderQueue.containsKey(UID))
			this.renderQueue.put(UID, new WindowRenderAction(methodName, args));
	}
	
	public Collection<RenderAction> getQueue()
	{
		return this.renderQueue.values();
	}
	
	public Rectangle getBounds()
	{
		return this.geom;
	}
	
	public String getName()
	{
		return this.name;
	}
	
	public void setHandle(float x, float y, float width, float height)
	{
		this.handle = new Rectangle(x, y, width, height);
	}
	
	public Rectangle getHandleBounds()
	{
		return this.handle;
	}
	
	public void moveBy(float xMod, float yMod)
	{
		this.geom.setX(this.geom.getX() + xMod);
		this.geom.setY(this.geom.getY() + yMod);
	}
	
	public Rectangle getHotSpot(String spot)
	{
		return this.buttonSpots.get(spot);
	}
	
	public Set<String> getHotSpots()
	{
		return this.buttonSpots.keySet();
	}
	
	public void addHotSpot(String script, String function, Rectangle bounds)
	{
		if(!this.buttonSpots.containsKey(script+"|"+function))
			this.buttonSpots.put(script+"|"+function, bounds);
	}
	
	public Color[] getColors()
	{
		return new Color[]{this.titleColor, this.borderOne, this.borderTwo, this.textColor};
	}
	
	public void setColors(Color titleParam, Color borderOneParam, Color borderTwoParam, Color textParam)
	{
		if(titleParam != null)
			this.titleColor = titleParam;
		if(borderOneParam != null)
			this.borderOne = borderOneParam;
		if(borderTwoParam != null)
			this.borderTwo = borderTwoParam;
		if(textParam != null)
			this.textColor = textParam;
	}
	
	public void addTextBox(String name, Rectangle bounds)
	{
		TextField tmpField = new TextField(ZeroDayExploit.getContainer(), ZeroDayExploit.getContainer().getDefaultFont(), (int)bounds.getX(), (int)bounds.getY(),(int)bounds.getWidth(), (int)bounds.getHeight());
		tmpField.setBorderColor(Color.transparent);
		this.addActionToQueue(name, "drawTextBox", ZeroDayExploit.getContainer().getGraphics(), this.getName(), bounds, tmpField);
	}
	
	public void removeRenderObject(String name)
	{
		this.renderQueue.remove(name);
	}
}
