local core = luajava.getCore()
local windowManager = core:getRootManager()
local screen2 = core:getManager(1)
function boot()
--windowManager:setTheme(core:createColor(0,0,0,255), core:createColor(0,0,255,255), core:createColor(0,0,0,255))
core:getScreen(0):drawImage(core:generatePattern(core:getResource("Pattern_Cube"), core:rootWidth(), core:rootHeight()), 0, 0, core:rootWidth(), core:rootHeight(), core:getObserver())
core:getScreen(0):drawImage(core:generateBorder(core:createColor(0,0,0,255), core:rootWidth(), core:rootHeight(), 10), 0, 0, core:rootWidth(), core:rootHeight(), core:getObserver())
windowManager:addWindow(core:rootWidth()/2-250,core:rootHeight()/2-100,500,200,"BITPRO INDUSTRIES BOOTLOADER")
windowManager:windowSurface("BITPRO INDUSTRIES BOOTLOADER"):setColor(core:createColor(255,255,255,255))
windowManager:windowSurface("BITPRO INDUSTRIES BOOTLOADER"):drawImage(core:vertGradient(core:createColor(95,1,1,255), core:createColor(181,10,10,255), 500, 200), 0,20,500,180, core:getObserver())
windowManager:windowSurface("BITPRO INDUSTRIES BOOTLOADER"):drawString("NOW STARTING BITPRO INDUSTRIES UNIFIED OPERATING SYSTEM.",5,35)
windowManager:windowSurface("BITPRO INDUSTRIES BOOTLOADER"):drawString("PLEASE WAIT...",5,192)

screen2:addWindow(50,50,500,200,"TESTWINDOW")
screen2:getWindow("TESTWINDOW"):updateColors(core:createColor(0,0,0,255), core:createColor(0,0,255,255), core:createColor(0,0,0,255))
screen2:windowSurface("TESTWINDOW"):drawImage(core:vertGradient(core:createColor(0,0,255,255), core:createColor(0,0,0,255), 500, 200), 0,20,500,180, core:getObserver())
--windowManager:getWindow("BITPRO INDUSTRIES BOOTLOADER"):addMouseRegion("button", "boot", 0,0,500,200)
windowManager:getWindow("BITPRO INDUSTRIES BOOTLOADER"):addMouseRegion("INTERNALDRAG", "", 0,0,500,20)
windowManager:getWindow("BITPRO INDUSTRIES BOOTLOADER"):addTextBox("TEST", 5, 160, 200, 16, 1)

screen2:getWindow("TESTWINDOW"):queueUpdate()
screen2:repaint()

--windowManager:getWindow("BITPRO INDUSTRIES BOOTLOADER"):queueUpdate()
end
function allocate()
--core:allocateResource("Pattern_Cube")
end
function removeWindow()
windowManager:removeWindow("TESTWINDOW")
end
function postRender(window)
--Normally, this would draw things like the close and minimise boxes
end