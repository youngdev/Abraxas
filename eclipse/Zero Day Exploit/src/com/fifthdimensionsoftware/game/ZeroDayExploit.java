package com.fifthdimensionsoftware.game;

import java.awt.Graphics2D;
import java.awt.Toolkit;

import javax.swing.JFrame;

import com.fifthdimensionsoftware.lua.ExecutionCore;
import com.fifthdimensionsoftware.lua.LuaJava;

public class ZeroDayExploit{
	
	public String[] gameArgs;
	private static ZeroDayExploit instance;
	public boolean inGame = false;
	public GameWindow rootWindow = new GameWindow("Zero Day Exploit");
	
	public static void main(String[] args)
	{
		new ZeroDayExploit().run(args);
	}
	public void run(String[] args)
	{
		this.gameArgs = args;
		if(instance == null)
		{
			instance = this;
			//Setup the GameFrame
			rootWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			rootWindow.setSize(Toolkit.getDefaultToolkit().getScreenSize());
		    rootWindow.setExtendedState(JFrame.MAXIMIZED_BOTH);
		    rootWindow.setUndecorated(true);
			rootWindow.setAlwaysOnTop(true);
			rootWindow.setVisible(true);
			//Setup the double buffer
			rootWindow.initializeBuffer();
			//Draw the splash screen
			LuaJava.allocateResource("Splash_Back");
			LuaJava.allocateResource("Splash_Logo");
			LuaJava.getScreen().drawImage(LuaJava.getResource("Splash_Back"), 0, 0, LuaJava.screenWidth(), LuaJava.screenHeight(), LuaJava.getObserver());
			LuaJava.getScreen().drawImage(LuaJava.getResource("Splash_Logo"), LuaJava.screenWidth()/2 - LuaJava.getResource("Splash_Logo").getWidth()/2, LuaJava.screenHeight()/2 - LuaJava.getResource("Splash_Logo").getHeight()/2, LuaJava.getObserver());
			LuaJava.repaintScreen();
			//Wait for the script or a 3 second delay to finish
			long loadingTime = System.currentTimeMillis();
			ExecutionCore.executeFunction("boot", "allocate");
			while(System.currentTimeMillis() < loadingTime+3000 ){}
			LuaJava.getScreen().clearRect(0, 0, LuaJava.screenWidth(), LuaJava.screenHeight());
			LuaJava.repaintScreen();
			//setup the looping music playlist
			ExecutionCore.executeScriptAsync("main", "res/music.lua","Music");
			ExecutionCore.executeScriptAsync("main", "res/tick.lua","Tick");
			ExecutionCore.executeFunction("boot", "boot");
		}else
		{
			System.err.println("ZeroDayExploit was already instantiated! (THIS SHOULD BE IMPOSSIBLE!)");
			System.exit(1);
		}
	}
	
	public String getArgument(int index)
	{
		return this.gameArgs[index];
	}
	
	//Return the one and only instance of the game core
	public static ZeroDayExploit getInstance()
	{
		return ZeroDayExploit.instance;
	}
	
	//Used by LuaJava
	public static Graphics2D getScreen()
	{
		return getInstance().rootWindow.bufferGraphics();
	}
	
	//Used by LuaJava
	public static WindowManager getWindow()
	{
		return getInstance().rootWindow.windowManager;
	}
}
