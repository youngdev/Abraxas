package com.fifthdimensionsoftware.lua;


import java.io.File;
import java.io.InputStream;
import java.util.HashMap;

import org.luaj.vm2.Globals;
import org.luaj.vm2.LuaValue;
import org.luaj.vm2.lib.jse.JsePlatform;

public class ExecutionCore {
	
	private static HashMap<String,ScriptThread> threads = new HashMap<String,ScriptThread>();
	
	public static void executeScript(File script)
	{
		executeScript(script.getAbsolutePath());
	}
	
	public static void executeScript(String script)
	{
		//Hold on to the original System.out for later replacing
		//PrintStream tmpOut = System.out;
		//System.setOut(TTY.getTerminal(terminal));
		
		// create an environment to run in
		Globals globals = JsePlatform.standardGlobals();
		//globals.STDOUT = TTY.getTerminal(terminal);
		// Use the convenience function on the globals to load a chunk.
		LuaValue chunk = globals.loadFile(script);
		//System.setOut(tmpOut);
		// Use any of the "call()" or "invoke()" functions directly on the chunk.
		chunk.call(LuaValue.valueOf(script));
	}
	
	public static void executeStream(InputStream stream, String script)
	{
		//Hold on to the original System.out for later replacing
		//PrintStream tmpOut = System.out;
		//System.setOut(TTY.getTerminal(terminal));
		
		// create an environment to run in
		Globals globals = JsePlatform.standardGlobals();
		//globals.STDOUT = TTY.getTerminal(terminal);
		// Use the convenience function on the globals to load a chunk.
		LuaValue chunk = globals.loadStream(stream);
		//System.setOut(tmpOut);
		// Use any of the "call()" or "invoke()" functions directly on the chunk.
		chunk.call(LuaValue.valueOf(script));
	}
	
	public static void executeStreamAsync(InputStream stream, String script, String name)
	{
		ScriptThread thread = (new ScriptThread(stream, script));
		ExecutionCore.threads.put(name, thread);
		thread.start();
	}
	
	public static void executeScriptAsync(String script, String name)
	{
		ScriptThread thread = (new ScriptThread(script));
		ExecutionCore.threads.put(name, thread);
		thread.start();
	}
	
	public static void executeFunctionAsync(String script, String function)
	{
		FunctionThread thread = (new FunctionThread(script,function));
		thread.start();
	}
	
	public static void stopAsyncScript(String script)
	{
		ScriptThread thread = ExecutionCore.threads.get(script);
		thread.interrupt();
		try {
			thread.join();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		ExecutionCore.threads.remove(script);
	}
	
	public static void executeFunction(String script, String function)
	{
		LuaValue _G = JsePlatform.standardGlobals();
        _G.get("dofile").call(LuaValue.valueOf(LuaJava.filterPath("disk", script, "lua")));
        _G.get(function).call();
	}
	
	public static void executePostrender(String window)
	{
		LuaValue _G = JsePlatform.standardGlobals();
        _G.get("dofile").call(LuaValue.valueOf(LuaJava.filterPath("disk", "boot", "lua")));
        _G.get("postRender").call(LuaValue.valueOf(window));
	}
}
