package net.lotrek.zero.graphics;

import net.lotrek.zero.tools.MouseUtil;

import org.newdawn.slick.Graphics;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.gui.AbstractComponent;
import org.newdawn.slick.gui.GUIContext;

public class Checkbox extends AbstractComponent
{
	private int x, y;
	private boolean state;
	private String text;
	
	public Checkbox(GUIContext container, int xParam, int yParam, boolean state, String text)
	{
		super(container);
		
		this.x = xParam;
		this.y = yParam;
		this.state = state;
		this.text = text;
	}

	public int getHeight()
	{
		return 15;
	}

	public int getWidth()
	{
		return 15;
	}

	public int getX()
	{
		return x;
	}

	public int getY()
	{
		return y;
	}
	
	public void render(GUIContext gui, Graphics g) throws SlickException
	{
		g.drawRect(getX(), getY(), getWidth(), getHeight());
		g.drawRect(getX() + 1, getY() + 1, getWidth() - 2, getHeight() - 2);
		if(this.isChecked())
			g.fillRect(getX() + 3, getY() + 3, getWidth() - 5, getWidth() - 5);
		g.drawString(getText(), getX() + this.getWidth() + 5, getY() - 1);
	}

	public void setLocation(int xParam, int yParam)
	{
		this.x = xParam;
		this.y = yParam;
	}
	
	public void mousePressed(int button, int x, int y)
	{
		if(MouseUtil.withinBounds(this.getX(), this.getX() + this.getWidth(), this.getY(), this.getY() + this.getHeight(), x, y))
			this.setChecked(!this.isChecked());
	}
	
	public void setChecked(boolean val)
	{
		this.state = val;
	}
	
	public boolean isChecked()
	{
		return state;
	}
	
	public String getText()
	{
		return this.text;
	}
	
	public void setText(String text)
	{
		this.text = text;
	}
}
