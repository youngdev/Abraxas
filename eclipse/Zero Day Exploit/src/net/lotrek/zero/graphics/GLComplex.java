package net.lotrek.zero.graphics;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Calendar;
import java.util.Properties;

import net.lotrek.zero.ZeroDayExploit;
import net.lotrek.zero.engine.Processor;
import net.lotrek.zero.tools.AudioUtil;
import net.lotrek.zero.tools.GameUtil;

import org.lwjgl.input.Keyboard;
import org.lwjgl.opengl.Display;
import org.newdawn.slick.AppGameContainer;
import org.newdawn.slick.BasicGame;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.SlickException;

public class GLComplex extends BasicGame {

	private boolean inGame = false;
	private Properties saveProperties = new Properties();
	private static AppGameContainer gc;

	private static class ZeroContainer extends AppGameContainer {

		public ZeroContainer() throws SlickException {
			super(new GLComplex(), GraphicsUtil.getScreenWidth(), GraphicsUtil
					.getScreenHeight(), false);
			System.setProperty("org.lwjgl.opengl.Window.undecorated", "true");
			Display.setLocation(0, 0);
			this.setShowFPS(false);
			this.setClearEachFrame(false);
			this.setVerbose(true);
			GLComplex.gc = this;
		}

	}

	private GLComplex() {
		super("Zero Day Exploit");
	}

	public static void beginGL() {
		try {
			new ZeroContainer().start();
		} catch (SlickException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void render(GameContainer arg0, Graphics arg1) throws SlickException {
		GameUtil.renderGUI((AppGameContainer) arg0, arg1);
	}
	
	@Override
	public void keyPressed(int key, char c)
	{
		super.keyPressed(key, c);
		if(key == Keyboard.KEY_0)
		{
			GraphicsUtil.takeScreenShot(0, 0, GraphicsUtil.getScreenWidth(),
					GraphicsUtil.getScreenHeight(), "Screenshot-"
							+ Calendar.getInstance().getTime().toString().split("\\ ")[3].replace(":", "")
							+ ".png");
		}else
		if(Processor.getPlayer() != null)
		{
			Processor.getPlayer().getRegisters().get("r0_FIQ").setValue(key);
			Processor.getPlayer().getRegisters().get("r1_FIQ").setValue(c);
			Processor.getPlayer().queueIntrupt(0);
//			System.out.println("PRESSED " + key + " : " + (int)c);
		}
	}

	@Override
	public void init(GameContainer arg0) throws SlickException {
		
		Runtime.getRuntime().addShutdownHook(new Thread(){
			public void run()
			{
				AudioUtil.stopAll();
				GLComplex.gc.exit();
			}
		});
		
		if(ZeroDayExploit.getKey("--music"))
			AudioUtil.loadSound("res.bin/music.wav", true, false);
		
		GraphicsUtil.displayLoadingImage("res.bin/loadingImage.png",
				arg0.getGraphics(), 750, 10);
		GraphicsUtil.displayLoadingImage("res.bin/Zero.png",
				arg0.getGraphics(), 750, 10);
		GameUtil.initPregame();
	}

	@Override
	public void update(GameContainer arg0, int arg1) throws SlickException {}

	public boolean isInGame() {
		return this.inGame;
	}

	public void beginGame(File gameFile) {
		this.inGame = true;
		try {
			this.saveProperties.load(new FileInputStream(gameFile));
		} catch (IOException e) {
			e.printStackTrace();
		}

	}
	
	public static AppGameContainer getContainer()
	{
		return gc;
	}
}
