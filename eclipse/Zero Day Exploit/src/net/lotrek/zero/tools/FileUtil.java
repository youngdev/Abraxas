package net.lotrek.zero.tools;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Arrays;
import java.util.Comparator;

public class FileUtil
{
	public static String baseDir = "";
	
	public static InputStream getFile(String path)
	{
		path = baseDir + path;
		path = path.replace("\\", "/");
		
		if(path.contains(".bin"))
		{
			String first = path.split(".bin")[0] + ".bin";
			String last = path.split(".bin")[1].substring(1);
			
			 if(ZipUtil.exists(first, last))
				 return ZipUtil.getStreamForFile(first, last);
			 else
				 return AdvancedZipUtil.getFileFromPool(last);
				 
		} else
			try {
				File file = new File(path);
				if(!file.exists())
					file.createNewFile();
				return new FileInputStream(file);
			} catch (IOException e) {
				e.printStackTrace();
			}
		
		return null;
	}
	
	public static void sortBySize(File[] files, final boolean adscending)
	{
		Arrays.sort(files, new Comparator<File>() {
			@Override
			public int compare(File o1, File o2) {
				if(adscending)
					return o1.length() == o2.length() ? 0 : (o1.length() > o2.length() ? 1 : -1 );
				else
					return o1.length() == o2.length() ? 0 : (o1.length() < o2.length() ? 1 : -1 );
			}
		});
	}
}
