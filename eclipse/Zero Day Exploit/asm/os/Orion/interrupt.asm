;Orion interrupt subsystem

;Constants
	? SUPERVISOR = #0 ?
	? SYSTEM = #1 ?
	? USER = #2 ?
	? IRQ = #3 ?
	? ABORT = #4 ?
	
	B #:start:
;IVT
	:IVT:
	;8 interrupts
	0x 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 x0
	0x 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 x0
	;32 stack values
	:STACK:
	0x 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 x0
	0x 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 x0
;Code
:start:
	CPM SUPERVISOR
	;Set the IVT location
	ADD r12, r15, #:IVT:
	;Set interrupt 4 to :diskLoad:
	ADD r0, r15, #:diskLoad:
	STR r12, r0, #16
	ADD r13, r15, #:STACK:
	MOV r0, #4
	STR r13, r0, #0
	MVX r13, r13, IRQ
	B #:startEnd:
	
:diskLoad:
	;Ensure correct mode
	CPM IRQ
	
;Constants
	? loop = r5 ?
	? location = r2 ?
	? len = r3 ?
	? size = r4 ?
;Code

	;Load the first partition descriptor
	POP r0
	POP r6
	MOV r1, #9
	MOV r2, #512
	DLDR r0, r2, r1, #0
	MOV r2, #0
	
	;Load the partition location into r1, skip label
	LDR r0, r1, #0
	ADD r1, r1, #4
	
:segment:
	;Update block pointers
	MUL r2, r5, #12
	ADD r1, r1, r2
	MOV r2, #12
	
	;Load the section descriptor
	DLDR r0, r1, r2, #0
	
	;Re-align base location
	MUL r2, r5, #12
	SUB r1, r1, r2
	
	;Off-Limits Registers: r0, r1, r5
	
	;Load location, length, and size values into r2, r3, and r4
	LDR r0, location, #0
	LDR r0, len, #4
	LDR r0, size, #8
	
	CMP location, #0
	BEQ #:end:
	
	;Using location (r2) as a file pointer
	:file:
		DLDR r0, location, size, #0
		
		;Match filename
		:nameLoop:
			LDRB r6, r7, #0
			LDRB r0, r8, #0
			CMP r8, r7
			BNE #:endStr:
			CMP r8, #0
			ADD r6, r6, #1
			ADD r0, r0, #1
			BNE #:nameLoop:
		
		;Real code here, match found
		MOV r0, #1
		PUSH r0
		BX r14, SUPERVISOR
		
		:endStr:
		
		;Iterate to the next file
		ADD location, location, size
		SUB len, len, #1
		CMP len, #0
		BNE #:file:
	;END :file:
	
	;Loop through all 10 segments
	ADD r5, r5, #1
	CMP r5, #10
	BNE #:segment:
;END :segment:
:end:
	MOV r0, #0
	PUSH r0
	BX r14, SUPERVISOR
:startEnd:
	ADD r0, r15, #:filename:
	PUSH r0
	ADD r0, r15, #:data:
	PUSH r0
	SVC #4
	POP r1
	CMP r1, #1
	HLT_NE
	ADD r0, r0, #32
	MOV r15, r0
:filename:
	"multi"
:data: