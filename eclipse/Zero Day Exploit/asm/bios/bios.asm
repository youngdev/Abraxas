;Clear and reset screen
;	CLR
;	MOV r1, #0xff
;	LSL r1, r1, #8
;	ORR r1, r1, #0xff
;	LSL r1, r1, #8
;	ORR r1, r1, #0xff
;	LSL r1, r1, #8
;	ORR r1, r1, #0xff
BITS64
	MOV r1, #0xffffffff
BITS32
	COLOR r1
	SCR r0, r1
BITS64
	FREG r1, r0
	FREG r3, r1
	
	FDIV r1, r1, #2.0
	FSUB r1, r1, #128
	FDIV r3, r3, #2.0
	FSUB r3, r3, #128
	
	FMOV r2, #1.0
	GLOPEN
		GLPUSHMATRIX
	
		GLTRANSLATE r1, r3, r0
	
		GLGENTEXTURE r0
		GLBINDTEXTURE r0
		
		? GL_TEXTURE_2D = #0xde1 ?
		? GL_TEXTURE_WRAP_S = #0x2802 ?
		? GL_TEXTURE_WRAP_T = #0x2803 ?
		? GL_CLAMP_TO_EDGE = #0x812f ?
		? GL_TEXTURE_MIN_FILTER = #0x2801 ?
		? GL_TEXTURE_MAG_FILTER = #0x2800 ?
		? GL_NEAREST = #0x2600 ?
		? GL_RGB = #0x1907 ?
		? GL_UNSIGNED_BYTE = #0x1401 ?
		
		MOV r1, GL_TEXTURE_2D
		MOV r2, GL_TEXTURE_WRAP_S
		MOV r3, GL_CLAMP_TO_EDGE
		GLTEXPARAM r1, r2, r3
		MOV r2, GL_TEXTURE_WRAP_T
		GLTEXPARAM r1, r2, r3
		MOV r2, GL_TEXTURE_MIN_FILTER
		MOV r3, GL_NEAREST
		GLTEXPARAM r1, r2, r3
		MOV r2, GL_TEXTURE_MAG_FILTER
		GLTEXPARAM r1, r2, r3
		
		MOV r0, #0
		MOV r2, GL_RGB
		ADD r5, r15, #:img:
BITS32
	LDR r5, r3, #0
	LDR r5, r6, #4
BITS64
		ADD r5, r5, #8
		MOV r4, GL_UNSIGNED_BYTE
		GLTEXIMAGE r1, r0, r2, r3, r6, r0, r2, r4, r5
		
BITS32
	MUL r3, r3, #4
	MUL r6, r6, #4
BITS64
		
		FREG r1, r3
		FREG r3, r6
		
		GLBEGIN #0x7
			GLTEXCOORD r0, r0
			GLVERTEX r0, r0, r0
			GLTEXCOORD r2, r0
			GLVERTEX r1, r0, r0
			GLTEXCOORD r2, r2
			GLVERTEX r1, r3, r0
			GLTEXCOORD r0, r2
			GLVERTEX r0, r3, r0
		GLEND
		
		GLPOPMATRIX
	GLCLOSE
BITS32
;Init registers
	CTD r1
	MOV r3, #512
	MOV r2, #0
;Loop to find disks
:loop:
	MOV r0, #0
	DLDR r3, r0, r3, r2
	
	LDR r3, r4, #508
BITS64
	CMP r4, #0xff3003ff
BITS32
	
	B_EQ #:boot:
	
	ADD r2, r2, #1
	CMP r2, r1
	B_EQ #:exit:
	B_LT #:loop:
	
;No disks found, draw text and wait
:exit:
	ADD r1, r15, #:str:
	MOV r0, #5

	TEXT r0, r0, r1
	
	ADD r2, r15, #:HLT:
	
	MOV r12, r1
	ADD r12, r12, #20
	STR r12, r2, #0
	
	;Infinite loop
	B #0
;Triggered by the keyboard interrupt
:HLT:
	HLT
;Prepare for boot jump
:boot:
	MOV r0, #0
	:wait:
	ADD r0, r0, #1
	CMP r0, #400
	BNE #:wait:
	
	MOV r0, #0
	MOV r1, r2
	MOV r2, #0
	MOV r3, #0
	MOV r4, #0
	MOV r5, #0
	MOV r6, #0
	MOV r7, #0
	MOV r8, #0
	MOV r9, #0
	MOV r10, #0
	MOV r11, #0
	MOV r12, #0
	MOV r13, #0
	MOV r14, #0
	;TAKE THE SHOT!
	MOV r15, #508
:str:
"No operating system found"
:img:
# logo.bmp #