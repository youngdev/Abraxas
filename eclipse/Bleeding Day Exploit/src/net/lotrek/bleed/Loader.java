package net.lotrek.bleed;

import java.io.File;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;

public class Loader
{
	public static void main(String[] args)
	{
		loadClassesFromURL("https://github.com/fifthdimensionsoftware/Zero-Day-Exploit/raw/master/eclipse/Zero%20Day%20Exploit/Zero%20Day%20Exploit.jar");
		/*try {
			loadClassesFromURL(new File("../Zero Day Exploit/Zero Day Exploit.jar").toURI().toURL().toExternalForm());
		} catch (MalformedURLException e1) {
			e1.printStackTrace();
		}*/
		
		String[] args2 = new String[args.length + 2];
		System.arraycopy(args, 0, args2, 0, args.length);
		args2[args.length] = "--path";
		new File(System.getProperty("java.io.tmpdir") + "Zero Day Exploit").mkdirs();
		args2[args.length + 1] = new File(System.getProperty("java.io.tmpdir") + "Zero Day Exploit").getAbsolutePath() + "/";
		
		try {
			Class.forName("net.lotrek.zero.ZeroDayExploit").getDeclaredMethod("main", String[].class).invoke(null, new Object[]{args2});
		} catch (IllegalAccessException | IllegalArgumentException
				| InvocationTargetException | NoSuchMethodException
				| SecurityException | ClassNotFoundException e) {
			e.printStackTrace();
		}
	}
	
	public static boolean loadClassesFromURL(String string)
	{
		try {
			URL path = new URL(string);
			Method method = URLClassLoader.class.getDeclaredMethod("addURL", new Class[]{URL.class});
			method.setAccessible(true);
			method.invoke(ClassLoader.getSystemClassLoader(), new Object[]{path});
			return true;
		} catch (NoSuchMethodException
				| SecurityException | IllegalAccessException
				| IllegalArgumentException | InvocationTargetException | MalformedURLException e) {
			e.printStackTrace();
			return false;
		}
	}
}
