package com.fifthdimensionsoftware.asm;

public class BIOS
{
	public static void init()
	{
		for(Interrupt swi : Interrupt.values())
		{
			swi.init();
			ArmCore.getInstance().IVT.put(Integer.valueOf(swi.ID), swi.name());
		}
	}

	public enum Interrupt
	{
		loadDisk (13)
		;
		
		public int ID = -1;
		private static int lastID = 0;
		
		Interrupt()
		{
			
		}
		
		Interrupt(int forceID)
		{
			this.ID = forceID;
		}
		
		public void init()
		{
			this.ID = this.ID < 0 ? lastID++ : this.ID;
		}
	}
	
	public static void loadDisk()
	{
		int intCount = ArmCore.getInstance().getByteRegion(false, ArmCore.getInstance().getRegister(1)), dataStart = ArmCore.getInstance().getByteRegion(true, ArmCore.getInstance().getRegister(1)), auxVal = ArmCore.getInstance().getByteRegion(false, ArmCore.getInstance().getRegister(0));
		switch(ArmCore.getInstance().getByteRegion(true, ArmCore.getInstance().getRegister(0)))
		{
		case 0x02: //Read
			ArmCore.getInstance().loadDiskRegion(dataStart, intCount, auxVal);
			ArmCore.logEvent(false, true, "BIOS", "Loaded disk region " + dataStart + " - " + (intCount + dataStart) + " to address " + auxVal);
			return;
			
		case 0x03: //Write
			ArmCore.getInstance().saveDiskRegion(auxVal, intCount, dataStart);
			ArmCore.logEvent(false, true, "BIOS", "Wrote memory region " + dataStart + " - " + (intCount + dataStart) + " to disk at " + auxVal);
			return;
		}
	}
}